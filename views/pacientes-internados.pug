doctype html
html(lang="es")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Lista de Pacientes Internados y Emergencia
    link(rel="stylesheet", href="/css/style.css")
    style.
      #internados-container, #emergencia-container {
        margin: 20px auto;
        max-width: 1000px;
        padding: 10px;
      }
      table {
        width: 100%;
        border-collapse: collapse;
        font-family: Arial, sans-serif;
      }
      th, td {
        border: 1px solid #ccc;
        padding: 8px;
        text-align: center;
      }
      th {
        background: #f2f2f2;
      }
      tr:nth-child(even) {
        background-color: #f9f9f9;
      }
      button {
        background: #d9534f;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
      }
      button:hover {
        background: #c9302c;
      }
      #buscador, #buscador-emergencia {
        width: 100%;
        padding: 8px;
        margin-bottom: 15px;
        font-size: 16px;
      }
      tr.desaparecer {
        opacity: 0;
        transition: opacity 0.5s ease;
      }

  body
    header
      img(src="/img/logo.png", alt="Logo del Hospital")
      h1 Pacientes Internados y en Emergencia
    br
    br

    h2 Lista de Pacientes Internados
    #internados-container
      input#buscador(type="text", placeholder="Buscar paciente internado...")
      table
        thead
          tr
            th Nombre
            th DNI
            th Ala
            th Habitación
            th Cama
            th Fecha de Ingreso
            th Acción
        tbody#internados-lista
        div#modalFichaMedica(style="display:none; position:fixed; top:20%; left:35%; background:white; padding:20px; border:1px solid #ccc; max-width:80%; z-index:1000; overflow-y:auto; max-height:90vh;width: 30%;")
          h3 Ficha Clínica
          br
          div
            strong Motivo:
            p#motivo_text
            br
          div
            strong Cirugías Previas:
            p#cirugias_previas_text
            br
          div
            strong Alergias:
            p#alergias_text
            br
          div
            strong Medicación Actual:
            p#medicamentos_actuales_text
            br
          div
            strong Intervenciones:
            p#intervenciones_text
          br
          button#btnAgregarFichaMedica(type="button") Agregar / Editar Ficha Médica
          button(type="button", onclick="cerrarFichaMedica()") Cerrar


    h2 Lista de Pacientes en Camas de Emergencia
    #emergencia-container
      input#buscador-emergencia(type="text", placeholder="Buscar paciente en emergencia...")
      table
        thead
          tr
            th Observacion
            th DNI
            th Cama
            th Fecha Ingreso
            th Acción
        tbody#emergencia-lista

    script.
      let pacientesGlobal = [];
      let pacientesEmergenciaGlobal = [];
      let dniHistorialActual = null;

      async function cargarPacientesInternados() {
        const res = await fetch('/internaciones/internados');
        pacientesGlobal = await res.json();
        renderizarPacientes(pacientesGlobal);
      }

      function renderizarPacientes(pacientes) {
        const lista = document.getElementById('internados-lista');
        lista.innerHTML = '';

        if (pacientes.length === 0) {
          lista.innerHTML = '<tr><td colspan="7">No hay pacientes internados actualmente.</td></tr>';
          return;
        }

        pacientes.forEach(p => {
          const fila = document.createElement('tr');
          fila.id = `fila-${p.dni}`;
          fila.innerHTML = `
            <td>${p.nombre_completo}</td>
            <td>${p.dni}</td>
            <td>${p.ala_nombre}</td>
            <td>${p.id_habitacion}</td>
            <td>${p.id_cama}</td>
            <td>${new Date(p.fecha_ingreso).toLocaleString()}</td>
            <td>
              ${p.evaluacion_id ? 
                `<button onclick="mostrarFichaMedica('${p.evaluacion_id}')">Ver Ficha Clínica</button>` :
                `<button onclick="crearFichaMedica('${p.internacion_id}', '${p.dni}')">Crear Ficha Clínica</button>`
              }
              <button onclick="darAlta('${p.internacion_id}', '${p.cama_id}', '${p.dni}')">Dar Alta</button>
            </td>
          `;
          lista.appendChild(fila);
        });
      }

      async function darAlta(internacionId, camaId, dni) {
        const confirmar = confirm("¿Deseás dar de alta al paciente?");
        if (!confirmar) return;

        const res = await fetch('/internaciones/dar-alta', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ internacion_id: internacionId, cama_id: camaId })
        });

        const data = await res.json();
        alert(data.mensaje);

        const fila = document.getElementById(`fila-${dni}`);
        fila.classList.add('desaparecer');
        setTimeout(() => fila.remove(), 500);
      }

      document.getElementById('buscador').addEventListener('input', e => {
        const termino = e.target.value.toLowerCase();
        const filtrados = pacientesGlobal.filter(p =>
          p.nombre_completo.toLowerCase().includes(termino) ||
          p.dni.toLowerCase().includes(termino)
        );
        renderizarPacientes(filtrados);
      });

      async function cargarPacientesEmergencia() {
        const res = await fetch('/internaciones/emergencia');
        pacientesEmergenciaGlobal = await res.json();
        renderizarPacientesEmergencia(pacientesEmergenciaGlobal);
      }

      function renderizarPacientesEmergencia(pacientes) {
        const listaEmergencia = document.getElementById('emergencia-lista');
        listaEmergencia.innerHTML = '';

        if (pacientes.length === 0) {
          listaEmergencia.innerHTML = '<tr><td colspan="6">No hay pacientes en camas de emergencia actualmente.</td></tr>';
          return;
        }

        pacientes.forEach(p => {
          const fila = document.createElement('tr');
          fila.id = `fila-emergencia-${p.id_emergencia}`;
          fila.innerHTML = `
            <td>${p.observacion}</td>
            <td>${p.dni_falso}</td>
            <td>${p.id_cama}</td>
            <td>${new Date(p.fecha_ingreso).toLocaleString()}</td>
            <td>
                <button onclick="editarPaciente('${p.id_emergencia}')">Agendar</button>
                <button ${p.dni_falso.startsWith('EMERG') ? 'disabled' : ''} id="btn-trasladar-${p.id_emergencia}" onclick="trasladarPaciente('${p.id_emergencia}', '${p.id_cama}', '${p.dni_falso}')">Trasladar</button>
                <button ${p.dni_falso.startsWith('EMERG') ? 'disabled' : ''} id="btn-alta-${p.id_emergencia}" onclick="darAltaEmergencia('${p.id_emergencia}', '${p.id_cama}', '${p.dni_falso}')">Dar Alta</button>
            </td>
          `;
          listaEmergencia.appendChild(fila);
        });
      }

      async function darAltaEmergencia(emergenciaId, camaEmergenciaId, dni) {
        const confirmar = confirm("¿Deseás dar de alta al paciente de emergencia?");
        if (!confirmar) return;

        const res = await fetch('/internaciones/alta-emergencia', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id_emergencia: emergenciaId, cama_id: camaEmergenciaId })
        });

        const data = await res.json();
        alert(data.mensaje);

        const fila = document.getElementById(`fila-emergencia-${emergenciaId}`);
        fila.classList.add('desaparecer');
        setTimeout(() => fila.remove(), 500);
      }

      document.getElementById('buscador-emergencia').addEventListener('input', e => {
        const termino = e.target.value.toLowerCase();
        const filtrados = pacientesEmergenciaGlobal.filter(p =>
          p.observacion.toLowerCase().includes(termino) ||
          p.dni_falso.toLowerCase().includes(termino)
        );
        renderizarPacientesEmergencia(filtrados);
      });

      window.onload = () => {
        cargarPacientesInternados();
        cargarPacientesEmergencia();
      };


      function editarPaciente(idEmergencia){
        const nuevaObservacion = prompt("Ingrese nueva observacion: ");

        if(nuevaObservacion !== null){
            document.getElementById(`btn-trasladar-${idEmergencia}`).disabled = false;
            document.getElementById(`btn-alta-${idEmergencia}`).disabled = false;

            alert("Paciente editado. Ahora puede trasladar o dar el alta");
        }
      }

      async function editarPaciente(idEmergencia) {
        const nuevoDni = prompt("Ingrese el DNI real del paciente:");

        if (!nuevoDni || isNaN(nuevoDni)) {
          alert("DNI inválido.");
          return;
        }

        try {
          const res = await fetch('/internaciones/asignar-dni', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id_emergencia: Number(idEmergencia), nuevo_dni: Number(nuevoDni) })
          });

          const data = await res.json();

          if (res.ok) {
            alert(data.mensaje);

            const fila = document.getElementById(`fila-emergencia-${idEmergencia}`);
            if(!fila){
              alert("No se encontro la fila del paciente para actualizar");
              return;
            }
            const celdas = fila.getElementsByTagName("td");
            celdas[1].textContent = nuevoDni;

            const btnTrasladar = document.getElementById(`btn-trasladar-${idEmergencia}`);
            if (btnTrasladar) btnTrasladar.disabled = false;

            const btnAlta = document.getElementById(`btn-alta-${idEmergencia}`);
            if (btnAlta) btnAlta.disabled = false;


            const btnAgendar = fila.querySelector("button[onclick^='editarPaciente']");
            if (btnAgendar) btnAgendar.style.display = 'none';

          } else {
            alert(data.error || "Ocurrió un error");
          }
        } catch (err) {
          console.error(err);
          alert("Error al asignar DNI");
        }
      }

      async function trasladarPaciente(idEmergencia, camaEmergenciaId, dni) {
        const confirmar = confirm("¿Deseás trasladar al paciente a asignar otra cama?");
        if (!confirmar) return;

        const res = await fetch('/internaciones/alta-emergencia', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id_emergencia: idEmergencia, cama_id: camaEmergenciaId })
        });

        const data = await res.json();

        if (res.ok) {
          alert(data.mensaje);

          const fila = document.getElementById(`fila-emergencia-${idEmergencia}`);
          fila.classList.add('desaparecer');
          setTimeout(() => fila.remove(), 500);

          window.location.href = `/camas/asignar_cama`;

        } else {
          alert(data.error || "Error al intentar trasladar al paciente.");
        }
      }
      function mostrarFichaMedica(evaluacionId) {
        fetch(`/internaciones/historial-medico/${evaluacionId}`)
          .then(res => {
            if (!res.ok) throw new Error('No existe historial');
            return res.json();
          })
          .then(data => {
            document.getElementById('motivo_text').textContent = data.motivo || '-';
            document.getElementById('cirugias_previas_text').textContent = data.cirugias_previas || '-';
            document.getElementById('alergias_text').textContent = data.alergias || '-';
            document.getElementById('medicamentos_actuales_text').textContent = data.medicamentos_actuales || '-';
            document.getElementById('intervenciones_text').textContent = data.intervenciones || '-';

            // Mostrar botón Agregar solo si no hay ficha
            const btnAgregar = document.getElementById('btnAgregarFichaMedica');
            if (!data || Object.values(data).every(v => !v)) {
              btnAgregar.style.display = 'inline-block';
            } else {
              btnAgregar.style.display = 'none';
            }

            // Asignar evento para ir a la vista de agregar/editar ficha
            btnAgregar.onclick = () => {
              window.location.href = `/internaciones/ficha-medica/editar/${evaluacionId}`;
            };

            document.getElementById('modalFichaMedica').style.display = 'block';
          })
          .catch(() => {
            // No hay ficha
            document.getElementById('motivo_text').textContent = '-';
            document.getElementById('cirugias_previas_text').textContent = '-';
            document.getElementById('alergias_text').textContent = '-';
            document.getElementById('medicamentos_actuales_text').textContent = '-';
            document.getElementById('intervenciones_text').textContent = '-';

            const btnAgregar = document.getElementById('btnAgregarFichaMedica');
            btnAgregar.style.display = 'inline-block';
            btnAgregar.onclick = () => {
              window.location.href = `/internaciones/ficha-medica/editar/${evaluacionId}`;
            };

            document.getElementById('modalFichaMedica').style.display = 'block';
          });
      }

      function guardarFichaMedica() {
        const form = document.forms["formFichaMedica"];
        const datos = {
          evaluacion_id: form.evaluacion_id.value,
          enfermedades_previas: form.enfermedades_previas.value,
          cirugias_previas: form.cirugias_previas.value,
          alergias: form.alergias.value,
          medicamentos_actuales: form.medicamentos_actuales.value,
          antecedentes_familiares: form.antecedentes_familiares.value
        };

        fetch('/internaciones/historial-medico', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(datos)
        })
          .then(res => res.json())
          .then(data => {
            alert(data.mensaje);
            cerrarFichaMedica();
          })
          .catch(() => alert("Error al guardar ficha médica"));
      }


      
      function crearFichaMedica(internacionId, dniPaciente) {
        fetch('/internaciones/evaluaciones/crear', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ internacion_id: internacionId, dni_paciente: dniPaciente, dni_medico: '12345678' }) // Reemplazá por el usuario logueado
        })
        .then(res => res.json())
        .then(data => {
          if (data.evaluacion_id) {
            window.location.href = `/internaciones/ficha-medica/editar/${data.evaluacion_id}`;
          } else {
            alert("No se pudo crear la evaluación.");
          }
        });
      }
      function cerrarFichaMedica(){
        document.getElementById('modalFichaMedica').style.display = 'none';
      }
